/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.portugol.parser;

import org.sablecc.portugol.lexer.*;
import org.sablecc.portugol.node.*;
import org.sablecc.portugol.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAprograma3Programa */
            {
                ArrayList<Object> list = new2();
                push(goTo(0), list, false);
            }
            break;
            case 3: /* reduce AAprograma4Programa */
            {
                ArrayList<Object> list = new3();
                push(goTo(0), list, false);
            }
            break;
            case 4: /* reduce ADeclVariavelDeclaracao */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list, false);
            }
            break;
            case 5: /* reduce ADeclConstanteDeclaracao */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list, false);
            }
            break;
            case 6: /* reduce ASequenciaVarVarSeq */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list, false);
            }
            break;
            case 7: /* reduce AUnicaVarVarSeq */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list, false);
            }
            break;
            case 8: /* reduce ATipoRealTipo */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce ATipoIntTipo */
            {
                ArrayList<Object> list = new9();
                push(goTo(3), list, false);
            }
            break;
            case 10: /* reduce ATipoCharTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(3), list, false);
            }
            break;
            case 11: /* reduce AVariavelSimplesVar */
            {
                ArrayList<Object> list = new11();
                push(goTo(4), list, false);
            }
            break;
            case 12: /* reduce AVariavelArrayVar */
            {
                ArrayList<Object> list = new12();
                push(goTo(4), list, false);
            }
            break;
            case 13: /* reduce AInteiroValor */
            {
                ArrayList<Object> list = new13();
                push(goTo(5), list, false);
            }
            break;
            case 14: /* reduce ARealValor */
            {
                ArrayList<Object> list = new14();
                push(goTo(5), list, false);
            }
            break;
            case 15: /* reduce AStringValor */
            {
                ArrayList<Object> list = new15();
                push(goTo(5), list, false);
            }
            break;
            case 16: /* reduce AAtribuicaoComando */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce ALeiaComando */
            {
                ArrayList<Object> list = new17();
                push(goTo(6), list, false);
            }
            break;
            case 18: /* reduce AEscrevaComando */
            {
                ArrayList<Object> list = new18();
                push(goTo(6), list, false);
            }
            break;
            case 19: /* reduce ASeComando */
            {
                ArrayList<Object> list = new19();
                push(goTo(6), list, false);
            }
            break;
            case 20: /* reduce AAavaliecomando1Comando */
            {
                ArrayList<Object> list = new20();
                push(goTo(6), list, false);
            }
            break;
            case 21: /* reduce AAavaliecomando2Comando */
            {
                ArrayList<Object> list = new21();
                push(goTo(6), list, false);
            }
            break;
            case 22: /* reduce AAenquantocomando1Comando */
            {
                ArrayList<Object> list = new22();
                push(goTo(6), list, false);
            }
            break;
            case 23: /* reduce AAenquantocomando2Comando */
            {
                ArrayList<Object> list = new23();
                push(goTo(6), list, false);
            }
            break;
            case 24: /* reduce AArepitacomando1Comando */
            {
                ArrayList<Object> list = new24();
                push(goTo(6), list, false);
            }
            break;
            case 25: /* reduce AArepitacomando2Comando */
            {
                ArrayList<Object> list = new25();
                push(goTo(6), list, false);
            }
            break;
            case 26: /* reduce AAparacomando1Comando */
            {
                ArrayList<Object> list = new26();
                push(goTo(6), list, false);
            }
            break;
            case 27: /* reduce AAparacomando2Comando */
            {
                ArrayList<Object> list = new27();
                push(goTo(6), list, false);
            }
            break;
            case 28: /* reduce AAparapassocomando1Comando */
            {
                ArrayList<Object> list = new28();
                push(goTo(6), list, false);
            }
            break;
            case 29: /* reduce AAparapassocomando2Comando */
            {
                ArrayList<Object> list = new29();
                push(goTo(6), list, false);
            }
            break;
            case 30: /* reduce AComandoSeq */
            {
                ArrayList<Object> list = new30();
                push(goTo(7), list, false);
            }
            break;
            case 31: /* reduce AAcasoseq1CasoSeq */
            {
                ArrayList<Object> list = new31();
                push(goTo(8), list, false);
            }
            break;
            case 32: /* reduce AAcasoseq2CasoSeq */
            {
                ArrayList<Object> list = new32();
                push(goTo(8), list, false);
            }
            break;
            case 33: /* reduce AAcasosenao1CasoSenao */
            {
                ArrayList<Object> list = new33();
                push(goTo(9), list, false);
            }
            break;
            case 34: /* reduce AAcasosenao2CasoSenao */
            {
                ArrayList<Object> list = new34();
                push(goTo(9), list, false);
            }
            break;
            case 35: /* reduce AAcomsenaosedecl1SeDecl */
            {
                ArrayList<Object> list = new35();
                push(goTo(10), list, false);
            }
            break;
            case 36: /* reduce AAcomsenaosedecl2SeDecl */
            {
                ArrayList<Object> list = new36();
                push(goTo(10), list, false);
            }
            break;
            case 37: /* reduce AAcomsenaosedecl3SeDecl */
            {
                ArrayList<Object> list = new37();
                push(goTo(10), list, false);
            }
            break;
            case 38: /* reduce AAcomsenaosedecl4SeDecl */
            {
                ArrayList<Object> list = new38();
                push(goTo(10), list, false);
            }
            break;
            case 39: /* reduce AAsemsenaosedecl1SeDecl */
            {
                ArrayList<Object> list = new39();
                push(goTo(10), list, false);
            }
            break;
            case 40: /* reduce AAsemsenaosedecl2SeDecl */
            {
                ArrayList<Object> list = new40();
                push(goTo(10), list, false);
            }
            break;
            case 41: /* reduce AComOpExp */
            {
                ArrayList<Object> list = new41();
                push(goTo(11), list, false);
            }
            break;
            case 42: /* reduce ASemOpExp */
            {
                ArrayList<Object> list = new42();
                push(goTo(11), list, false);
            }
            break;
            case 43: /* reduce AComOp2Termo */
            {
                ArrayList<Object> list = new43();
                push(goTo(12), list, false);
            }
            break;
            case 44: /* reduce ASemOp2Termo */
            {
                ArrayList<Object> list = new44();
                push(goTo(12), list, false);
            }
            break;
            case 45: /* reduce ANegativoTermo */
            {
                ArrayList<Object> list = new45();
                push(goTo(12), list, false);
            }
            break;
            case 46: /* reduce AEmparentadoFator */
            {
                ArrayList<Object> list = new46();
                push(goTo(13), list, false);
            }
            break;
            case 47: /* reduce AConstanteFator */
            {
                ArrayList<Object> list = new47();
                push(goTo(13), list, false);
            }
            break;
            case 48: /* reduce AVariavelFator */
            {
                ArrayList<Object> list = new48();
                push(goTo(13), list, false);
            }
            break;
            case 49: /* reduce ASomaOp */
            {
                ArrayList<Object> list = new49();
                push(goTo(14), list, false);
            }
            break;
            case 50: /* reduce ASubtracaoOp */
            {
                ArrayList<Object> list = new50();
                push(goTo(14), list, false);
            }
            break;
            case 51: /* reduce AMultiplicacaoOp2 */
            {
                ArrayList<Object> list = new51();
                push(goTo(15), list, false);
            }
            break;
            case 52: /* reduce ADivisaoOp2 */
            {
                ArrayList<Object> list = new52();
                push(goTo(15), list, false);
            }
            break;
            case 53: /* reduce ASequenciaExpExpSeq */
            {
                ArrayList<Object> list = new53();
                push(goTo(16), list, false);
            }
            break;
            case 54: /* reduce AUnicaExpExpSeq */
            {
                ArrayList<Object> list = new54();
                push(goTo(16), list, false);
            }
            break;
            case 55: /* reduce AExpLogica */
            {
                ArrayList<Object> list = new55();
                push(goTo(17), list, false);
            }
            break;
            case 56: /* reduce ADisjuncaoExpLogica2 */
            {
                ArrayList<Object> list = new56();
                push(goTo(18), list, false);
            }
            break;
            case 57: /* reduce ADisjuncaoxExpLogica2 */
            {
                ArrayList<Object> list = new57();
                push(goTo(18), list, false);
            }
            break;
            case 58: /* reduce ASimplesExpLogica2 */
            {
                ArrayList<Object> list = new58();
                push(goTo(18), list, false);
            }
            break;
            case 59: /* reduce AConjuncaoExpLogica3 */
            {
                ArrayList<Object> list = new59();
                push(goTo(19), list, false);
            }
            break;
            case 60: /* reduce ASimplesExpLogica3 */
            {
                ArrayList<Object> list = new60();
                push(goTo(19), list, false);
            }
            break;
            case 61: /* reduce ASimplesExpLogica4 */
            {
                ArrayList<Object> list = new61();
                push(goTo(20), list, false);
            }
            break;
            case 62: /* reduce ANegadaExpLogica4 */
            {
                ArrayList<Object> list = new62();
                push(goTo(20), list, false);
            }
            break;
            case 63: /* reduce AParentadoExpLogica4 */
            {
                ArrayList<Object> list = new63();
                push(goTo(20), list, false);
            }
            break;
            case 64: /* reduce AParentadonegadoExpLogica4 */
            {
                ArrayList<Object> list = new64();
                push(goTo(20), list, false);
            }
            break;
            case 65: /* reduce AIgualOpLogicos */
            {
                ArrayList<Object> list = new65();
                push(goTo(21), list, false);
            }
            break;
            case 66: /* reduce ADifOpLogicos */
            {
                ArrayList<Object> list = new66();
                push(goTo(21), list, false);
            }
            break;
            case 67: /* reduce AMenoriOpLogicos */
            {
                ArrayList<Object> list = new67();
                push(goTo(21), list, false);
            }
            break;
            case 68: /* reduce AMaioriOpLogicos */
            {
                ArrayList<Object> list = new68();
                push(goTo(21), list, false);
            }
            break;
            case 69: /* reduce AMenorOpLogicos */
            {
                ArrayList<Object> list = new69();
                push(goTo(21), list, false);
            }
            break;
            case 70: /* reduce AMaiorOpLogicos */
            {
                ArrayList<Object> list = new70();
                push(goTo(21), list, false);
            }
            break;
            case 71: /* reduce ATerminal$Declaracao */
            {
                ArrayList<Object> list = new71();
                push(goTo(22), list, true);
            }
            break;
            case 72: /* reduce ANonTerminal$Declaracao */
            {
                ArrayList<Object> list = new72();
                push(goTo(22), list, true);
            }
            break;
            case 73: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new73();
                push(goTo(23), list, true);
            }
            break;
            case 74: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new74();
                push(goTo(23), list, true);
            }
            break;
            case 75: /* reduce ATerminal$CasoSenao */
            {
                ArrayList<Object> list = new75();
                push(goTo(24), list, true);
            }
            break;
            case 76: /* reduce ANonTerminal$CasoSenao */
            {
                ArrayList<Object> list = new76();
                push(goTo(24), list, true);
            }
            break;
            case 77: /* reduce ATerminal$CasoSeq */
            {
                ArrayList<Object> list = new77();
                push(goTo(25), list, true);
            }
            break;
            case 78: /* reduce ANonTerminal$CasoSeq */
            {
                ArrayList<Object> list = new78();
                push(goTo(25), list, true);
            }
            break;
            case 79: /* reduce ATerminal$ComandoSeq */
            {
                ArrayList<Object> list = new79();
                push(goTo(26), list, true);
            }
            break;
            case 80: /* reduce ANonTerminal$ComandoSeq */
            {
                ArrayList<Object> list = new80();
                push(goTo(26), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TComecaPrograma tcomecaprogramaNode2;
        TId tidNode3;
        TInicioPrograma tinicioprogramaNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFimPrograma tfimprogramaNode7;
        tcomecaprogramaNode2 = (TComecaPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioprogramaNode4 = (TInicioPrograma)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimprogramaNode7 = (TFimPrograma)nodeArrayList4.get(0);

        pprogramaNode1 = new APrograma(tcomecaprogramaNode2, tidNode3, tinicioprogramaNode4, listNode5, listNode6, tfimprogramaNode7);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TComecaPrograma tcomecaprogramaNode2;
        TId tidNode3;
        TInicioPrograma tinicioprogramaNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TFimPrograma tfimprogramaNode8;
        tcomecaprogramaNode2 = (TComecaPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioprogramaNode4 = (TInicioPrograma)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        tfimprogramaNode8 = (TFimPrograma)nodeArrayList5.get(0);

        pprogramaNode1 = new APrograma(tcomecaprogramaNode2, tidNode3, tinicioprogramaNode4, listNode6, listNode7, tfimprogramaNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAprograma3Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TComecaPrograma tcomecaprogramaNode2;
        TId tidNode3;
        TInicioPrograma tinicioprogramaNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TFimPrograma tfimprogramaNode8;
        tcomecaprogramaNode2 = (TComecaPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioprogramaNode4 = (TInicioPrograma)nodeArrayList3.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        tfimprogramaNode8 = (TFimPrograma)nodeArrayList5.get(0);

        pprogramaNode1 = new APrograma(tcomecaprogramaNode2, tidNode3, tinicioprogramaNode4, listNode5, listNode7, tfimprogramaNode8);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAprograma4Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TComecaPrograma tcomecaprogramaNode2;
        TId tidNode3;
        TInicioPrograma tinicioprogramaNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TFimPrograma tfimprogramaNode9;
        tcomecaprogramaNode2 = (TComecaPrograma)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tinicioprogramaNode4 = (TInicioPrograma)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimprogramaNode9 = (TFimPrograma)nodeArrayList6.get(0);

        pprogramaNode1 = new APrograma(tcomecaprogramaNode2, tidNode3, tinicioprogramaNode4, listNode6, listNode8, tfimprogramaNode9);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADeclVariavelDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PVarSeq pvarseqNode4;
        TPontoVirgula tpontovirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pvarseqNode4 = (PVarSeq)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclVariavelDeclaracao(ptipoNode2, tdoispontosNode3, pvarseqNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ADeclConstanteDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TId tidNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new ADeclConstanteDeclaracao(tconstanteNode2, tidNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ASequenciaVarVarSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarSeq pvarseqNode1;
        {
            // Block
        PVar pvarNode2;
        TVirgula tvirgulaNode3;
        PVarSeq pvarseqNode4;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pvarseqNode4 = (PVarSeq)nodeArrayList3.get(0);

        pvarseqNode1 = new ASequenciaVarVarSeq(pvarNode2, tvirgulaNode3, pvarseqNode4);
        }
	nodeList.add(pvarseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AUnicaVarVarSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarSeq pvarseqNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pvarseqNode1 = new AUnicaVarVarSeq(pvarNode2);
        }
	nodeList.add(pvarseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ATipoRealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoReal ttiporealNode2;
        ttiporealNode2 = (TTipoReal)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoRealTipo(ttiporealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ATipoIntTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoInt ttipointNode2;
        ttipointNode2 = (TTipoInt)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoIntTipo(ttipointNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ATipoCharTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoChar ttipocharNode2;
        ttipocharNode2 = (TTipoChar)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoCharTipo(ttipocharNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AVariavelSimplesVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        pvarNode1 = new AVariavelSimplesVar(tidNode2);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AVariavelArrayVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar pvarNode1;
        {
            // Block
        TId tidNode2;
        TAbreColchete tabrecolcheteNode3;
        TNumeroInt tnumerointNode4;
        TFechaColchete tfechacolcheteNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tabrecolcheteNode3 = (TAbreColchete)nodeArrayList2.get(0);
        tnumerointNode4 = (TNumeroInt)nodeArrayList3.get(0);
        tfechacolcheteNode5 = (TFechaColchete)nodeArrayList4.get(0);

        pvarNode1 = new AVariavelArrayVar(tidNode2, tabrecolcheteNode3, tnumerointNode4, tfechacolcheteNode5);
        }
	nodeList.add(pvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroInt tnumerointNode2;
        tnumerointNode2 = (TNumeroInt)nodeArrayList1.get(0);

        pvalorNode1 = new AInteiroValor(tnumerointNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ARealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        pvalorNode1 = new ARealValor(tnumerorealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAtribuicaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PVar pvarNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        TPontoVirgula tpontovirgulaNode5;
        pvarNode2 = (PVar)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pcomandoNode1 = new AAtribuicaoComando(pvarNode2, tatribuicaoNode3, pexpNode4, tpontovirgulaNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ALeiaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TLeiaConsole tleiaconsoleNode2;
        TAbreParentese tabreparenteseNode3;
        PVarSeq pvarseqNode4;
        TFechaParentese tfechaparenteseNode5;
        TPontoVirgula tpontovirgulaNode6;
        tleiaconsoleNode2 = (TLeiaConsole)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pvarseqNode4 = (PVarSeq)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pcomandoNode1 = new ALeiaComando(tleiaconsoleNode2, tabreparenteseNode3, pvarseqNode4, tfechaparenteseNode5, tpontovirgulaNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AEscrevaComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEscrevaConsole tescrevaconsoleNode2;
        TAbreParentese tabreparenteseNode3;
        PExpSeq pexpseqNode4;
        TFechaParentese tfechaparenteseNode5;
        TPontoVirgula tpontovirgulaNode6;
        tescrevaconsoleNode2 = (TEscrevaConsole)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexpseqNode4 = (PExpSeq)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList5.get(0);

        pcomandoNode1 = new AEscrevaComando(tescrevaconsoleNode2, tabreparenteseNode3, pexpseqNode4, tfechaparenteseNode5, tpontovirgulaNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeDecl psedeclNode2;
        psedeclNode2 = (PSeDecl)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeComando(psedeclNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AAavaliecomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaParentese tfechaparenteseNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TFimAvalie tfimavalieNode9;
        TPontoVirgula tpontovirgulaNode10;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tfimavalieNode9 = (TFimAvalie)nodeArrayList6.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList7.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, listNode6, listNode8, tfimavalieNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AAavaliecomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TAvalie tavalieNode2;
        TAbreParentese tabreparenteseNode3;
        PExp pexpNode4;
        TFechaParentese tfechaparenteseNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        TFimAvalie tfimavalieNode10;
        TPontoVirgula tpontovirgulaNode11;
        tavalieNode2 = (TAvalie)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        tfimavalieNode10 = (TFimAvalie)nodeArrayList7.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new AAvalieComando(tavalieNode2, tabreparenteseNode3, pexpNode4, tfechaparenteseNode5, listNode7, listNode9, tfimavalieNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AAenquantocomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TFaca tfacaNode6;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PComando pcomandoNode8;
        TPontoVirgula tpontovirgulaNode9;
        TFimEnquanto tfimenquantoNode10;
        TPontoVirgula tpontovirgulaNode11;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        }
        pcomandoNode8 = (PComando)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);
        tfimenquantoNode10 = (TFimEnquanto)nodeArrayList8.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tfacaNode6, listNode7, pcomandoNode8, tpontovirgulaNode9, tfimenquantoNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AAenquantocomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TFaca tfacaNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        PComando pcomandoNode9;
        TPontoVirgula tpontovirgulaNode10;
        TFimEnquanto tfimenquantoNode11;
        TPontoVirgula tpontovirgulaNode12;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tfacaNode6 = (TFaca)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pcomandoNode9 = (PComando)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);
        tfimenquantoNode11 = (TFimEnquanto)nodeArrayList9.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList10.get(0);

        pcomandoNode1 = new AEnquantoComando(tenquantoNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tfacaNode6, listNode8, pcomandoNode9, tpontovirgulaNode10, tfimenquantoNode11, tpontovirgulaNode12);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AArepitacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PComando pcomandoNode4;
        TPontoVirgula tpontovirgulaNode5;
        TAte tateNode6;
        TAbreParentese tabreparenteseNode7;
        PExpLogica pexplogicaNode8;
        TFechaParentese tfechaparenteseNode9;
        TPontoVirgula tpontovirgulaNode10;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        }
        pcomandoNode4 = (PComando)nodeArrayList2.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList3.get(0);
        tateNode6 = (TAte)nodeArrayList4.get(0);
        tabreparenteseNode7 = (TAbreParentese)nodeArrayList5.get(0);
        pexplogicaNode8 = (PExpLogica)nodeArrayList6.get(0);
        tfechaparenteseNode9 = (TFechaParentese)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, listNode3, pcomandoNode4, tpontovirgulaNode5, tateNode6, tabreparenteseNode7, pexplogicaNode8, tfechaparenteseNode9, tpontovirgulaNode10);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AArepitacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TRepita trepitaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PComando pcomandoNode5;
        TPontoVirgula tpontovirgulaNode6;
        TAte tateNode7;
        TAbreParentese tabreparenteseNode8;
        PExpLogica pexplogicaNode9;
        TFechaParentese tfechaparenteseNode10;
        TPontoVirgula tpontovirgulaNode11;
        trepitaNode2 = (TRepita)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pcomandoNode5 = (PComando)nodeArrayList3.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList4.get(0);
        tateNode7 = (TAte)nodeArrayList5.get(0);
        tabreparenteseNode8 = (TAbreParentese)nodeArrayList6.get(0);
        pexplogicaNode9 = (PExpLogica)nodeArrayList7.get(0);
        tfechaparenteseNode10 = (TFechaParentese)nodeArrayList8.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);

        pcomandoNode1 = new ARepitaComando(trepitaNode2, listNode4, pcomandoNode5, tpontovirgulaNode6, tateNode7, tabreparenteseNode8, pexplogicaNode9, tfechaparenteseNode10, tpontovirgulaNode11);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAparacomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TAte tateNode6;
        TNumeroInt tnumerointNode7;
        TFaca tfacaNode8;
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        PComando pcomandoNode10;
        TPontoVirgula tpontovirgulaNode11;
        TFimPara tfimparaNode12;
        TPontoVirgula tpontovirgulaNode13;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        }
        pcomandoNode10 = (PComando)nodeArrayList8.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);
        tfimparaNode12 = (TFimPara)nodeArrayList10.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList11.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tateNode6, tnumerointNode7, tfacaNode8, listNode9, pcomandoNode10, tpontovirgulaNode11, tfimparaNode12, tpontovirgulaNode13);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAparacomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TAte tateNode6;
        TNumeroInt tnumerointNode7;
        TFaca tfacaNode8;
        LinkedList<Object> listNode10 = new LinkedList<Object>();
        PComando pcomandoNode11;
        TPontoVirgula tpontovirgulaNode12;
        TFimPara tfimparaNode13;
        TPontoVirgula tpontovirgulaNode14;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tateNode6 = (TAte)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tfacaNode8 = (TFaca)nodeArrayList7.get(0);
        {
            // Block
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        listNode9 = (LinkedList)nodeArrayList8.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        pcomandoNode11 = (PComando)nodeArrayList9.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList10.get(0);
        tfimparaNode13 = (TFimPara)nodeArrayList11.get(0);
        tpontovirgulaNode14 = (TPontoVirgula)nodeArrayList12.get(0);

        pcomandoNode1 = new AParaComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tateNode6, tnumerointNode7, tfacaNode8, listNode10, pcomandoNode11, tpontovirgulaNode12, tfimparaNode13, tpontovirgulaNode14);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAparapassocomando1Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TPasso tpassoNode6;
        TNumeroInt tnumerointNode7;
        TAte tateNode8;
        TNumeroInt tnumerointNode9;
        TFaca tfacaNode10;
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        PComando pcomandoNode12;
        TPontoVirgula tpontovirgulaNode13;
        TFimPara tfimparaNode14;
        TPontoVirgula tpontovirgulaNode15;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        tnumerointNode9 = (TNumeroInt)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        {
            // Block
        }
        pcomandoNode12 = (PComando)nodeArrayList10.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList11.get(0);
        tfimparaNode14 = (TFimPara)nodeArrayList12.get(0);
        tpontovirgulaNode15 = (TPontoVirgula)nodeArrayList13.get(0);

        pcomandoNode1 = new AParaPassoComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tpassoNode6, tnumerointNode7, tateNode8, tnumerointNode9, tfacaNode10, listNode11, pcomandoNode12, tpontovirgulaNode13, tfimparaNode14, tpontovirgulaNode15);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AAparapassocomando2Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TPara tparaNode2;
        PVar pvarNode3;
        TDe tdeNode4;
        TNumeroInt tnumerointNode5;
        TPasso tpassoNode6;
        TNumeroInt tnumerointNode7;
        TAte tateNode8;
        TNumeroInt tnumerointNode9;
        TFaca tfacaNode10;
        LinkedList<Object> listNode12 = new LinkedList<Object>();
        PComando pcomandoNode13;
        TPontoVirgula tpontovirgulaNode14;
        TFimPara tfimparaNode15;
        TPontoVirgula tpontovirgulaNode16;
        tparaNode2 = (TPara)nodeArrayList1.get(0);
        pvarNode3 = (PVar)nodeArrayList2.get(0);
        tdeNode4 = (TDe)nodeArrayList3.get(0);
        tnumerointNode5 = (TNumeroInt)nodeArrayList4.get(0);
        tpassoNode6 = (TPasso)nodeArrayList5.get(0);
        tnumerointNode7 = (TNumeroInt)nodeArrayList6.get(0);
        tateNode8 = (TAte)nodeArrayList7.get(0);
        tnumerointNode9 = (TNumeroInt)nodeArrayList8.get(0);
        tfacaNode10 = (TFaca)nodeArrayList9.get(0);
        {
            // Block
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        listNode11 = (LinkedList)nodeArrayList10.get(0);
	if(listNode11 != null)
	{
	  listNode12.addAll(listNode11);
	}
        }
        pcomandoNode13 = (PComando)nodeArrayList11.get(0);
        tpontovirgulaNode14 = (TPontoVirgula)nodeArrayList12.get(0);
        tfimparaNode15 = (TFimPara)nodeArrayList13.get(0);
        tpontovirgulaNode16 = (TPontoVirgula)nodeArrayList14.get(0);

        pcomandoNode1 = new AParaPassoComando(tparaNode2, pvarNode3, tdeNode4, tnumerointNode5, tpassoNode6, tnumerointNode7, tateNode8, tnumerointNode9, tfacaNode10, listNode12, pcomandoNode13, tpontovirgulaNode14, tfimparaNode15, tpontovirgulaNode16);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AComandoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoSeq pcomandoseqNode1;
        {
            // Block
        PComando pcomandoNode2;
        TPontoVirgula tpontovirgulaNode3;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        tpontovirgulaNode3 = (TPontoVirgula)nodeArrayList2.get(0);

        pcomandoseqNode1 = new AComandoSeq(pcomandoNode2, tpontovirgulaNode3);
        }
	nodeList.add(pcomandoseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAcasoseq1CasoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoSeq pcasoseqNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PComando pcomandoNode6;
        TPontoVirgula tpontovirgulaNode7;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        {
            // Block
        }
        pcomandoNode6 = (PComando)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList5.get(0);

        pcasoseqNode1 = new ACasoSeq(tcasoNode2, pvalorNode3, tdoispontosNode4, listNode5, pcomandoNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcasoseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AAcasoseq2CasoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoSeq pcasoseqNode1;
        {
            // Block
        TCaso tcasoNode2;
        PValor pvalorNode3;
        TDoisPontos tdoispontosNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        PComando pcomandoNode7;
        TPontoVirgula tpontovirgulaNode8;
        tcasoNode2 = (TCaso)nodeArrayList1.get(0);
        pvalorNode3 = (PValor)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pcomandoNode7 = (PComando)nodeArrayList5.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList6.get(0);

        pcasoseqNode1 = new ACasoSeq(tcasoNode2, pvalorNode3, tdoispontosNode4, listNode6, pcomandoNode7, tpontovirgulaNode8);
        }
	nodeList.add(pcasoseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AAcasosenao1CasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoSenao pcasosenaoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PComando pcomandoNode5;
        TPontoVirgula tpontovirgulaNode6;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        }
        pcomandoNode5 = (PComando)nodeArrayList3.get(0);
        tpontovirgulaNode6 = (TPontoVirgula)nodeArrayList4.get(0);

        pcasosenaoNode1 = new ACasoSenao(tsenaoNode2, tdoispontosNode3, listNode4, pcomandoNode5, tpontovirgulaNode6);
        }
	nodeList.add(pcasosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAcasosenao2CasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCasoSenao pcasosenaoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        TDoisPontos tdoispontosNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PComando pcomandoNode6;
        TPontoVirgula tpontovirgulaNode7;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pcomandoNode6 = (PComando)nodeArrayList4.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList5.get(0);

        pcasosenaoNode1 = new ACasoSenao(tsenaoNode2, tdoispontosNode3, listNode5, pcomandoNode6, tpontovirgulaNode7);
        }
	nodeList.add(pcasosenaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAcomsenaosedecl1SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PComando pcomandoNode8;
        TPontoVirgula tpontovirgulaNode9;
        TSenao tsenaoNode10;
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        PComando pcomandoNode12;
        TPontoVirgula tpontovirgulaNode13;
        TFimSe tfimseNode14;
        TPontoVirgula tpontovirgulaNode15;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        }
        pcomandoNode8 = (PComando)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);
        tsenaoNode10 = (TSenao)nodeArrayList8.get(0);
        {
            // Block
        }
        pcomandoNode12 = (PComando)nodeArrayList9.get(0);
        tpontovirgulaNode13 = (TPontoVirgula)nodeArrayList10.get(0);
        tfimseNode14 = (TFimSe)nodeArrayList11.get(0);
        tpontovirgulaNode15 = (TPontoVirgula)nodeArrayList12.get(0);

        psedeclNode1 = new AComSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode7, pcomandoNode8, tpontovirgulaNode9, tsenaoNode10, listNode11, pcomandoNode12, tpontovirgulaNode13, tfimseNode14, tpontovirgulaNode15);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAcomsenaosedecl2SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        PComando pcomandoNode9;
        TPontoVirgula tpontovirgulaNode10;
        TSenao tsenaoNode11;
        LinkedList<Object> listNode12 = new LinkedList<Object>();
        PComando pcomandoNode13;
        TPontoVirgula tpontovirgulaNode14;
        TFimSe tfimseNode15;
        TPontoVirgula tpontovirgulaNode16;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pcomandoNode9 = (PComando)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);
        tsenaoNode11 = (TSenao)nodeArrayList9.get(0);
        {
            // Block
        }
        pcomandoNode13 = (PComando)nodeArrayList10.get(0);
        tpontovirgulaNode14 = (TPontoVirgula)nodeArrayList11.get(0);
        tfimseNode15 = (TFimSe)nodeArrayList12.get(0);
        tpontovirgulaNode16 = (TPontoVirgula)nodeArrayList13.get(0);

        psedeclNode1 = new AComSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode8, pcomandoNode9, tpontovirgulaNode10, tsenaoNode11, listNode12, pcomandoNode13, tpontovirgulaNode14, tfimseNode15, tpontovirgulaNode16);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAcomsenaosedecl3SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PComando pcomandoNode8;
        TPontoVirgula tpontovirgulaNode9;
        TSenao tsenaoNode10;
        LinkedList<Object> listNode12 = new LinkedList<Object>();
        PComando pcomandoNode13;
        TPontoVirgula tpontovirgulaNode14;
        TFimSe tfimseNode15;
        TPontoVirgula tpontovirgulaNode16;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        }
        pcomandoNode8 = (PComando)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);
        tsenaoNode10 = (TSenao)nodeArrayList8.get(0);
        {
            // Block
        LinkedList<Object> listNode11 = new LinkedList<Object>();
        listNode11 = (LinkedList)nodeArrayList9.get(0);
	if(listNode11 != null)
	{
	  listNode12.addAll(listNode11);
	}
        }
        pcomandoNode13 = (PComando)nodeArrayList10.get(0);
        tpontovirgulaNode14 = (TPontoVirgula)nodeArrayList11.get(0);
        tfimseNode15 = (TFimSe)nodeArrayList12.get(0);
        tpontovirgulaNode16 = (TPontoVirgula)nodeArrayList13.get(0);

        psedeclNode1 = new AComSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode7, pcomandoNode8, tpontovirgulaNode9, tsenaoNode10, listNode12, pcomandoNode13, tpontovirgulaNode14, tfimseNode15, tpontovirgulaNode16);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAcomsenaosedecl4SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList14 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList13 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList12 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList11 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        PComando pcomandoNode9;
        TPontoVirgula tpontovirgulaNode10;
        TSenao tsenaoNode11;
        LinkedList<Object> listNode13 = new LinkedList<Object>();
        PComando pcomandoNode14;
        TPontoVirgula tpontovirgulaNode15;
        TFimSe tfimseNode16;
        TPontoVirgula tpontovirgulaNode17;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pcomandoNode9 = (PComando)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);
        tsenaoNode11 = (TSenao)nodeArrayList9.get(0);
        {
            // Block
        LinkedList<Object> listNode12 = new LinkedList<Object>();
        listNode12 = (LinkedList)nodeArrayList10.get(0);
	if(listNode12 != null)
	{
	  listNode13.addAll(listNode12);
	}
        }
        pcomandoNode14 = (PComando)nodeArrayList11.get(0);
        tpontovirgulaNode15 = (TPontoVirgula)nodeArrayList12.get(0);
        tfimseNode16 = (TFimSe)nodeArrayList13.get(0);
        tpontovirgulaNode17 = (TPontoVirgula)nodeArrayList14.get(0);

        psedeclNode1 = new AComSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode8, pcomandoNode9, tpontovirgulaNode10, tsenaoNode11, listNode13, pcomandoNode14, tpontovirgulaNode15, tfimseNode16, tpontovirgulaNode17);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAsemsenaosedecl1SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PComando pcomandoNode8;
        TPontoVirgula tpontovirgulaNode9;
        TFimSe tfimseNode10;
        TPontoVirgula tpontovirgulaNode11;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        }
        pcomandoNode8 = (PComando)nodeArrayList6.get(0);
        tpontovirgulaNode9 = (TPontoVirgula)nodeArrayList7.get(0);
        tfimseNode10 = (TFimSe)nodeArrayList8.get(0);
        tpontovirgulaNode11 = (TPontoVirgula)nodeArrayList9.get(0);

        psedeclNode1 = new ASemSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode7, pcomandoNode8, tpontovirgulaNode9, tfimseNode10, tpontovirgulaNode11);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAsemsenaosedecl2SeDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList10 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeDecl psedeclNode1;
        {
            // Block
        TSe tseNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica pexplogicaNode4;
        TFechaParentese tfechaparenteseNode5;
        TEntao tentaoNode6;
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        PComando pcomandoNode9;
        TPontoVirgula tpontovirgulaNode10;
        TFimSe tfimseNode11;
        TPontoVirgula tpontovirgulaNode12;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList6.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        pcomandoNode9 = (PComando)nodeArrayList7.get(0);
        tpontovirgulaNode10 = (TPontoVirgula)nodeArrayList8.get(0);
        tfimseNode11 = (TFimSe)nodeArrayList9.get(0);
        tpontovirgulaNode12 = (TPontoVirgula)nodeArrayList10.get(0);

        psedeclNode1 = new ASemSenaoSeDecl(tseNode2, tabreparenteseNode3, pexplogicaNode4, tfechaparenteseNode5, tentaoNode6, listNode8, pcomandoNode9, tpontovirgulaNode10, tfimseNode11, tpontovirgulaNode12);
        }
	nodeList.add(psedeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AComOpExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExp pexpNode2;
        POp popNode3;
        PTermo ptermoNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        popNode3 = (POp)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexpNode1 = new AComOpExp(pexpNode2, popNode3, ptermoNode4);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASemOpExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexpNode1 = new ASemOpExp(ptermoNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AComOp2Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        POp2 pop2Node3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pop2Node3 = (POp2)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AComOp2Termo(ptermoNode2, pop2Node3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ASemOp2Termo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new ASemOp2Termo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ANegativoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        PFator pfatorNode3;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);
        pfatorNode3 = (PFator)nodeArrayList2.get(0);

        ptermoNode1 = new ANegativoTermo(tsubtracaoNode2, pfatorNode3);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AEmparentadoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TAbreParentese tabreparenteseNode2;
        PExp pexpNode3;
        TFechaParentese tfechaparenteseNode4;
        tabreparenteseNode2 = (TAbreParentese)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tfechaparenteseNode4 = (TFechaParentese)nodeArrayList3.get(0);

        pfatorNode1 = new AEmparentadoFator(tabreparenteseNode2, pexpNode3, tfechaparenteseNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AConstanteFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pfatorNode1 = new AConstanteFator(pvalorNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AVariavelFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PVar pvarNode2;
        pvarNode2 = (PVar)nodeArrayList1.get(0);

        pfatorNode1 = new AVariavelFator(pvarNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ASomaOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POp popNode1;
        {
            // Block
        TSoma tsomaNode2;
        tsomaNode2 = (TSoma)nodeArrayList1.get(0);

        popNode1 = new ASomaOp(tsomaNode2);
        }
	nodeList.add(popNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ASubtracaoOp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POp popNode1;
        {
            // Block
        TSubtracao tsubtracaoNode2;
        tsubtracaoNode2 = (TSubtracao)nodeArrayList1.get(0);

        popNode1 = new ASubtracaoOp(tsubtracaoNode2);
        }
	nodeList.add(popNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AMultiplicacaoOp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POp2 pop2Node1;
        {
            // Block
        TMulti tmultiNode2;
        tmultiNode2 = (TMulti)nodeArrayList1.get(0);

        pop2Node1 = new AMultiplicacaoOp2(tmultiNode2);
        }
	nodeList.add(pop2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ADivisaoOp2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POp2 pop2Node1;
        {
            // Block
        TDiv tdivNode2;
        tdivNode2 = (TDiv)nodeArrayList1.get(0);

        pop2Node1 = new ADivisaoOp2(tdivNode2);
        }
	nodeList.add(pop2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce ASequenciaExpExpSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSeq pexpseqNode1;
        {
            // Block
        PExpSeq pexpseqNode2;
        TVirgula tvirgulaNode3;
        PExp pexpNode4;
        pexpseqNode2 = (PExpSeq)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexpseqNode1 = new ASequenciaExpExpSeq(pexpseqNode2, tvirgulaNode3, pexpNode4);
        }
	nodeList.add(pexpseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AUnicaExpExpSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSeq pexpseqNode1;
        {
            // Block
        PExp pexpNode2;
        pexpNode2 = (PExp)nodeArrayList1.get(0);

        pexpseqNode1 = new AUnicaExpExpSeq(pexpNode2);
        }
	nodeList.add(pexpseqNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExp pexpNode2;
        POpLogicos poplogicosNode3;
        PExp pexpNode4;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        poplogicosNode3 = (POpLogicos)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pexplogicaNode1 = new AExpLogica(pexpNode2, poplogicosNode3, pexpNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ADisjuncaoExpLogica2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica2 pexplogica2Node1;
        {
            // Block
        PExpLogica2 pexplogica2Node2;
        TDisjuncao tdisjuncaoNode3;
        PExpLogica3 pexplogica3Node4;
        pexplogica2Node2 = (PExpLogica2)nodeArrayList1.get(0);
        tdisjuncaoNode3 = (TDisjuncao)nodeArrayList2.get(0);
        pexplogica3Node4 = (PExpLogica3)nodeArrayList3.get(0);

        pexplogica2Node1 = new ADisjuncaoExpLogica2(pexplogica2Node2, tdisjuncaoNode3, pexplogica3Node4);
        }
	nodeList.add(pexplogica2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ADisjuncaoxExpLogica2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica2 pexplogica2Node1;
        {
            // Block
        PExpLogica2 pexplogica2Node2;
        TDisjuncaoExc tdisjuncaoexcNode3;
        PExpLogica3 pexplogica3Node4;
        pexplogica2Node2 = (PExpLogica2)nodeArrayList1.get(0);
        tdisjuncaoexcNode3 = (TDisjuncaoExc)nodeArrayList2.get(0);
        pexplogica3Node4 = (PExpLogica3)nodeArrayList3.get(0);

        pexplogica2Node1 = new ADisjuncaoxExpLogica2(pexplogica2Node2, tdisjuncaoexcNode3, pexplogica3Node4);
        }
	nodeList.add(pexplogica2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ASimplesExpLogica2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica2 pexplogica2Node1;
        {
            // Block
        PExpLogica3 pexplogica3Node2;
        pexplogica3Node2 = (PExpLogica3)nodeArrayList1.get(0);

        pexplogica2Node1 = new ASimplesExpLogica2(pexplogica3Node2);
        }
	nodeList.add(pexplogica2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AConjuncaoExpLogica3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica3 pexplogica3Node1;
        {
            // Block
        PExpLogica3 pexplogica3Node2;
        TConjuncao tconjuncaoNode3;
        PExpLogica4 pexplogica4Node4;
        pexplogica3Node2 = (PExpLogica3)nodeArrayList1.get(0);
        tconjuncaoNode3 = (TConjuncao)nodeArrayList2.get(0);
        pexplogica4Node4 = (PExpLogica4)nodeArrayList3.get(0);

        pexplogica3Node1 = new AConjuncaoExpLogica3(pexplogica3Node2, tconjuncaoNode3, pexplogica4Node4);
        }
	nodeList.add(pexplogica3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ASimplesExpLogica3 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica3 pexplogica3Node1;
        {
            // Block
        PExpLogica4 pexplogica4Node2;
        pexplogica4Node2 = (PExpLogica4)nodeArrayList1.get(0);

        pexplogica3Node1 = new ASimplesExpLogica3(pexplogica4Node2);
        }
	nodeList.add(pexplogica3Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ASimplesExpLogica4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica4 pexplogica4Node1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);

        pexplogica4Node1 = new ASimplesExpLogica4(pexplogicaNode2);
        }
	nodeList.add(pexplogica4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ANegadaExpLogica4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica4 pexplogica4Node1;
        {
            // Block
        TNegacao tnegacaoNode2;
        PExpLogica pexplogicaNode3;
        tnegacaoNode2 = (TNegacao)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);

        pexplogica4Node1 = new ANegadaExpLogica4(tnegacaoNode2, pexplogicaNode3);
        }
	nodeList.add(pexplogica4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce AParentadoExpLogica4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica4 pexplogica4Node1;
        {
            // Block
        TAbreParentese tabreparenteseNode2;
        PExpLogica2 pexplogica2Node3;
        TFechaParentese tfechaparenteseNode4;
        tabreparenteseNode2 = (TAbreParentese)nodeArrayList1.get(0);
        pexplogica2Node3 = (PExpLogica2)nodeArrayList2.get(0);
        tfechaparenteseNode4 = (TFechaParentese)nodeArrayList3.get(0);

        pexplogica4Node1 = new AParentadoExpLogica4(tabreparenteseNode2, pexplogica2Node3, tfechaparenteseNode4);
        }
	nodeList.add(pexplogica4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AParentadonegadoExpLogica4 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica4 pexplogica4Node1;
        {
            // Block
        TNegacao tnegacaoNode2;
        TAbreParentese tabreparenteseNode3;
        PExpLogica2 pexplogica2Node4;
        TFechaParentese tfechaparenteseNode5;
        tnegacaoNode2 = (TNegacao)nodeArrayList1.get(0);
        tabreparenteseNode3 = (TAbreParentese)nodeArrayList2.get(0);
        pexplogica2Node4 = (PExpLogica2)nodeArrayList3.get(0);
        tfechaparenteseNode5 = (TFechaParentese)nodeArrayList4.get(0);

        pexplogica4Node1 = new AParentadonegadoExpLogica4(tnegacaoNode2, tabreparenteseNode3, pexplogica2Node4, tfechaparenteseNode5);
        }
	nodeList.add(pexplogica4Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AIgualOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TIgualdade tigualdadeNode2;
        tigualdadeNode2 = (TIgualdade)nodeArrayList1.get(0);

        poplogicosNode1 = new AIgualOpLogicos(tigualdadeNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ADifOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TDiferenca tdiferencaNode2;
        tdiferencaNode2 = (TDiferenca)nodeArrayList1.get(0);

        poplogicosNode1 = new ADifOpLogicos(tdiferencaNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMenoriOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        poplogicosNode1 = new AMenoriOpLogicos(tmenorigualNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce AMaioriOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        poplogicosNode1 = new AMaioriOpLogicos(tmaiorigualNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AMenorOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TMenor tmenorNode2;
        tmenorNode2 = (TMenor)nodeArrayList1.get(0);

        poplogicosNode1 = new AMenorOpLogicos(tmenorNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AMaiorOpLogicos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POpLogicos poplogicosNode1;
        {
            // Block
        TMaior tmaiorNode2;
        tmaiorNode2 = (TMaior)nodeArrayList1.get(0);

        poplogicosNode1 = new AMaiorOpLogicos(tmaiorNode2);
        }
	nodeList.add(poplogicosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce ATerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDeclaracao pdeclaracaoNode1;
        pdeclaracaoNode1 = (PDeclaracao)nodeArrayList1.get(0);
	if(pdeclaracaoNode1 != null)
	{
	  listNode2.add(pdeclaracaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce ANonTerminal$Declaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDeclaracao pdeclaracaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdeclaracaoNode2 = (PDeclaracao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdeclaracaoNode2 != null)
	{
	  listNode3.add(pdeclaracaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ATerminal$CasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCasoSenao pcasosenaoNode1;
        pcasosenaoNode1 = (PCasoSenao)nodeArrayList1.get(0);
	if(pcasosenaoNode1 != null)
	{
	  listNode2.add(pcasosenaoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ANonTerminal$CasoSenao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCasoSenao pcasosenaoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcasosenaoNode2 = (PCasoSenao)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcasosenaoNode2 != null)
	{
	  listNode3.add(pcasosenaoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce ATerminal$CasoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCasoSeq pcasoseqNode1;
        pcasoseqNode1 = (PCasoSeq)nodeArrayList1.get(0);
	if(pcasoseqNode1 != null)
	{
	  listNode2.add(pcasoseqNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce ANonTerminal$CasoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCasoSeq pcasoseqNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcasoseqNode2 = (PCasoSeq)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcasoseqNode2 != null)
	{
	  listNode3.add(pcasoseqNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ATerminal$ComandoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComandoSeq pcomandoseqNode1;
        pcomandoseqNode1 = (PComandoSeq)nodeArrayList1.get(0);
	if(pcomandoseqNode1 != null)
	{
	  listNode2.add(pcomandoseqNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ANonTerminal$ComandoSeq */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComandoSeq pcomandoseqNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoseqNode2 = (PComandoSeq)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoseqNode2 != null)
	{
	  listNode3.add(pcomandoseqNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {2, SHIFT, 1}, },
			{{-1, ERROR, 1}, {40, SHIFT, 3}, },
			{{-1, ERROR, 2}, {57, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {0, SHIFT, 4}, },
			{{-1, ERROR, 4}, {1, SHIFT, 5}, {3, SHIFT, 6}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {22, SHIFT, 14}, {23, SHIFT, 15}, {24, SHIFT, 16}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 6}, {40, SHIFT, 25}, },
			{{-1, ERROR, 7}, {51, SHIFT, 26}, },
			{{-1, ERROR, 8}, {51, SHIFT, 27}, },
			{{-1, ERROR, 9}, {51, SHIFT, 28}, },
			{{-1, ERROR, 10}, {51, SHIFT, 29}, },
			{{-1, ERROR, 11}, {51, SHIFT, 30}, },
			{{-1, ERROR, 12}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, {49, SHIFT, 35}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 19}, {45, SHIFT, 36}, },
			{{-1, ERROR, 20}, {39, SHIFT, 37}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 23}, {1, SHIFT, 38}, {3, SHIFT, 6}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {22, SHIFT, 14}, {23, SHIFT, 15}, {24, SHIFT, 16}, {40, SHIFT, 17}, },
			{{-1, ERROR, 24}, {1, SHIFT, 41}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 25}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, },
			{{-1, ERROR, 26}, {40, SHIFT, 17}, },
			{{-1, ERROR, 27}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 28}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 29}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 30}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 31}, {46, SHIFT, 61}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 33}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 34}, {19, SHIFT, 64}, },
			{{-1, ERROR, 35}, {41, SHIFT, 65}, },
			{{-1, ERROR, 36}, {40, SHIFT, 17}, },
			{{-1, ERROR, 37}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, REDUCE, 1}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 40}, {1, SHIFT, 68}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 46}, {46, SHIFT, 69}, },
			{{-1, ERROR, 47}, {52, SHIFT, 70}, },
			{{-1, REDUCE, 7}, {44, SHIFT, 71}, },
			{{-1, ERROR, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 50}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 54}, {25, SHIFT, 74}, {26, SHIFT, 75}, },
			{{-1, REDUCE, 42}, {27, SHIFT, 77}, {28, SHIFT, 78}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 56}, {44, SHIFT, 80}, {52, SHIFT, 81}, },
			{{-1, ERROR, 57}, {25, SHIFT, 74}, {26, SHIFT, 75}, {29, SHIFT, 82}, {30, SHIFT, 83}, {31, SHIFT, 84}, {32, SHIFT, 85}, {33, SHIFT, 86}, {34, SHIFT, 87}, },
			{{-1, ERROR, 58}, {52, SHIFT, 89}, },
			{{-1, ERROR, 59}, {25, SHIFT, 74}, {26, SHIFT, 75}, {52, SHIFT, 90}, },
			{{-1, ERROR, 60}, {52, SHIFT, 91}, },
			{{-1, REDUCE, 30}, {17, SHIFT, 92}, },
			{{-1, ERROR, 62}, {46, SHIFT, 93}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 64}, {41, SHIFT, 94}, },
			{{-1, ERROR, 65}, {50, SHIFT, 95}, },
			{{-1, ERROR, 66}, {46, SHIFT, 96}, },
			{{-1, ERROR, 67}, {25, SHIFT, 74}, {26, SHIFT, 75}, {46, SHIFT, 97}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 70}, {46, SHIFT, 98}, },
			{{-1, ERROR, 71}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 73}, {25, SHIFT, 74}, {26, SHIFT, 75}, {52, SHIFT, 100}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 76}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 79}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 80}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 81}, {46, SHIFT, 104}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 88}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 89}, {7, SHIFT, 106}, },
			{{-1, ERROR, 90}, {8, SHIFT, 107}, {11, SHIFT, 108}, },
			{{-1, ERROR, 91}, {14, SHIFT, 113}, },
			{{-1, ERROR, 92}, {51, SHIFT, 114}, },
			{{-1, REDUCE, 30}, {17, SHIFT, 115}, },
			{{-1, ERROR, 94}, {17, SHIFT, 116}, {21, SHIFT, 117}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 41}, {27, SHIFT, 77}, {28, SHIFT, 78}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 53}, {25, SHIFT, 74}, {26, SHIFT, 75}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 55}, {25, SHIFT, 74}, {26, SHIFT, 75}, },
			{{-1, ERROR, 106}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 107}, {45, SHIFT, 120}, },
			{{-1, ERROR, 108}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 111}, {8, SHIFT, 107}, {12, SHIFT, 122}, },
			{{-1, ERROR, 112}, {8, SHIFT, 107}, {11, SHIFT, 108}, },
			{{-1, ERROR, 113}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 114}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 115}, {51, SHIFT, 129}, },
			{{-1, ERROR, 116}, {41, SHIFT, 130}, },
			{{-1, ERROR, 117}, {41, SHIFT, 131}, },
			{{-1, ERROR, 118}, {46, SHIFT, 132}, },
			{{-1, ERROR, 119}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 120}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 121}, {45, SHIFT, 136}, },
			{{-1, ERROR, 122}, {46, SHIFT, 137}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 125}, {8, SHIFT, 107}, {12, SHIFT, 138}, },
			{{-1, ERROR, 126}, {46, SHIFT, 139}, },
			{{-1, ERROR, 127}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 128}, {52, SHIFT, 141}, },
			{{-1, ERROR, 129}, {26, SHIFT, 49}, {40, SHIFT, 17}, {41, SHIFT, 43}, {42, SHIFT, 44}, {43, SHIFT, 45}, {51, SHIFT, 50}, },
			{{-1, ERROR, 130}, {14, SHIFT, 143}, },
			{{-1, ERROR, 131}, {17, SHIFT, 144}, },
			{{-1, REDUCE, 30}, {8, SHIFT, 145}, {9, SHIFT, 146}, },
			{{-1, ERROR, 133}, {46, SHIFT, 147}, },
			{{-1, ERROR, 134}, {46, SHIFT, 148}, },
			{{-1, ERROR, 135}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 136}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 138}, {46, SHIFT, 152}, },
			{{-1, REDUCE, 30}, {15, SHIFT, 153}, },
			{{-1, ERROR, 140}, {46, SHIFT, 154}, },
			{{-1, ERROR, 141}, {46, SHIFT, 155}, },
			{{-1, ERROR, 142}, {52, SHIFT, 156}, },
			{{-1, ERROR, 143}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 144}, {41, SHIFT, 159}, },
			{{-1, ERROR, 145}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 146}, {46, SHIFT, 162}, },
			{{-1, REDUCE, 30}, {8, SHIFT, 163}, {9, SHIFT, 164}, },
			{{-1, REDUCE, 30}, {8, REDUCE, 33}, {12, REDUCE, 33}, },
			{{-1, ERROR, 149}, {46, SHIFT, 165}, },
			{{-1, ERROR, 150}, {46, SHIFT, 166}, },
			{{-1, ERROR, 151}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 153}, {46, SHIFT, 168}, },
			{{-1, REDUCE, 30}, {15, SHIFT, 169}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 156}, {46, SHIFT, 170}, },
			{{-1, ERROR, 157}, {46, SHIFT, 171}, },
			{{-1, ERROR, 158}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 159}, {14, SHIFT, 173}, },
			{{-1, ERROR, 160}, {46, SHIFT, 174}, },
			{{-1, ERROR, 161}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 163}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 164}, {46, SHIFT, 178}, },
			{{-1, REDUCE, 30}, {8, REDUCE, 34}, {12, REDUCE, 34}, },
			{{-1, REDUCE, 30}, {8, REDUCE, 31}, {11, REDUCE, 31}, },
			{{-1, ERROR, 167}, {46, SHIFT, 179}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 169}, {46, SHIFT, 180}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 30}, {20, SHIFT, 181}, },
			{{-1, ERROR, 172}, {46, SHIFT, 182}, },
			{{-1, ERROR, 173}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 30}, {9, SHIFT, 185}, },
			{{-1, ERROR, 175}, {46, SHIFT, 186}, },
			{{-1, ERROR, 176}, {46, SHIFT, 187}, },
			{{-1, ERROR, 177}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 30}, {8, REDUCE, 32}, {11, REDUCE, 32}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 181}, {46, SHIFT, 189}, },
			{{-1, REDUCE, 30}, {20, SHIFT, 190}, },
			{{-1, ERROR, 183}, {46, SHIFT, 191}, },
			{{-1, ERROR, 184}, {4, SHIFT, 7}, {5, SHIFT, 8}, {6, SHIFT, 9}, {10, SHIFT, 10}, {13, SHIFT, 11}, {16, SHIFT, 12}, {18, SHIFT, 13}, {40, SHIFT, 17}, },
			{{-1, ERROR, 185}, {46, SHIFT, 193}, },
			{{-1, REDUCE, 30}, {9, SHIFT, 194}, },
			{{-1, REDUCE, 30}, {9, SHIFT, 195}, },
			{{-1, ERROR, 188}, {46, SHIFT, 196}, },
			{{-1, REDUCE, 26}, },
			{{-1, ERROR, 190}, {46, SHIFT, 197}, },
			{{-1, REDUCE, 30}, {20, SHIFT, 198}, },
			{{-1, ERROR, 192}, {46, SHIFT, 199}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 194}, {46, SHIFT, 200}, },
			{{-1, ERROR, 195}, {46, SHIFT, 201}, },
			{{-1, REDUCE, 30}, {9, SHIFT, 202}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 198}, {46, SHIFT, 203}, },
			{{-1, REDUCE, 30}, {20, SHIFT, 204}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 202}, {46, SHIFT, 205}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 204}, {46, SHIFT, 206}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 29}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 18}, {23, 39}, },
			{{-1, 47}, {36, 66}, {71, 99}, },
			{{-1, 19}, },
			{{-1, 20}, {13, 34}, {26, 48}, {27, 51}, {28, 51}, {29, 51}, {30, 51}, {36, 48}, {37, 51}, {49, 51}, {50, 51}, {71, 48}, {76, 51}, {79, 51}, {80, 51}, {88, 51}, {114, 51}, {129, 51}, },
			{{-1, 52}, {25, 46}, {108, 121}, },
			{{-1, 21}, {12, 31}, {24, 42}, {33, 62}, {40, 42}, {106, 118}, {113, 126}, {119, 133}, {120, 134}, {127, 140}, {135, 149}, {136, 150}, {143, 157}, {145, 160}, {151, 167}, {158, 172}, {161, 175}, {163, 176}, {173, 183}, {177, 188}, {184, 192}, },
			{{-1, 32}, {33, 63}, {119, 63}, {127, 63}, {135, 63}, {151, 63}, {158, 63}, {161, 63}, {177, 63}, {184, 63}, },
			{{-1, 109}, {112, 124}, },
			{{-1, 110}, {111, 123}, {125, 123}, },
			{{-1, 22}, },
			{{-1, 57}, {27, 53}, {29, 59}, {37, 67}, {50, 73}, {80, 103}, {88, 105}, },
			{{-1, 54}, {76, 101}, },
			{{-1, 55}, {49, 72}, {79, 102}, },
			{{-1, 76}, },
			{{-1, 79}, },
			{{-1, 56}, },
			{{-1, 58}, {30, 60}, {114, 128}, {129, 142}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 88}, },
			{{-1, 23}, },
			{{-1, 24}, {23, 40}, },
			{{-1, 111}, {112, 125}, },
			{{-1, 112}, },
			{{-1, 33}, {106, 119}, {113, 127}, {120, 135}, {136, 151}, {143, 158}, {145, 161}, {163, 177}, {173, 184}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: id",
			"expecting: EOF",
			"expecting: 'inicio'",
			"expecting: 'fim.', 'const', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'real', 'inteiro', 'caractere', id",
			"expecting: '('",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: ':'",
			"expecting: 'de', '+', '-', '*', '/', '=', '<>', '<=', '>=', '<', '>', '<-', ',', ';', '[', ')'",
			"expecting: '<-'",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'fim.', 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', id, ';'",
			"expecting: numero int, numero real, string",
			"expecting: '-', id, numero int, numero real, string, '('",
			"expecting: ';'",
			"expecting: 'de'",
			"expecting: numero int",
			"expecting: '+', '-', '*', '/', '=', '<>', '<=', '>=', '<', '>', ',', ':', ';', ')'",
			"expecting: ')'",
			"expecting: ',', ';', ')'",
			"expecting: id, numero int, numero real, string, '('",
			"expecting: '+', '-', '*', '/', '=', '<>', '<=', '>=', '<', '>', ',', ';', ')'",
			"expecting: '+', '-', ',', ')'",
			"expecting: ',', ')'",
			"expecting: '+', '-', '=', '<>', '<=', '>=', '<', '>'",
			"expecting: '+', '-', ')'",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'ate', 'para', id",
			"expecting: ']'",
			"expecting: '+', '-', ';'",
			"expecting: 'entao'",
			"expecting: 'senao', 'caso'",
			"expecting: 'faca'",
			"expecting: 'ate', 'passo'",
			"expecting: 'de', '+', '-', '*', '/', '=', '<>', '<=', '>=', '<', '>', '<-', ',', ';', ')'",
			"expecting: ';', ')'",
			"expecting: 'senao', 'fim avalie'",
			"expecting: 'ate'",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'fim enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'fim avalie', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'senao', 'avalie', 'caso', 'enquanto', 'repita', 'para', id",
			"expecting: 'leia', 'escreva', 'se', 'avalie', 'enquanto', 'repita', 'para', 'fim para', id",
			"expecting: 'leia', 'escreva', 'se', 'fim se', 'avalie', 'enquanto', 'repita', 'para', id",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 1, 5, 5, 5, 5, 5, 6, 1, 7, 7, 7, 8, 4, 7, 9, 10, 11, 4, 10, 12, 1, 13, 13, 13, 13, 14, 6, 6, 15, 16, 1, 13, 2, 4, 10, 2, 10, 17, 17, 17, 14, 18, 19, 20, 13, 21, 21, 22, 21, 21, 23, 24, 18, 25, 18, 26, 14, 6, 16, 27, 14, 28, 2, 4, 14, 1, 21, 25, 13, 13, 13, 20, 20, 20, 13, 14, 13, 13, 13, 13, 13, 13, 13, 29, 30, 31, 5, 26, 32, 33, 4, 11, 11, 34, 21, 21, 21, 22, 11, 25, 6, 7, 12, 30, 35, 35, 30, 6, 13, 5, 16, 16, 14, 6, 6, 7, 14, 35, 30, 35, 14, 6, 18, 13, 31, 36, 37, 14, 14, 6, 6, 11, 14, 38, 14, 14, 18, 6, 16, 6, 14, 37, 39, 14, 14, 6, 11, 14, 38, 11, 14, 14, 6, 31, 14, 6, 11, 6, 14, 39, 40, 14, 11, 14, 11, 41, 14, 6, 42, 14, 14, 6, 11, 40, 11, 14, 41, 14, 6, 14, 42, 42, 14, 11, 14, 41, 14, 11, 14, 14, 42, 11, 14, 41, 11, 11, 14, 11, 14, 11, 11, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
