/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.portugol.node;

import java.util.*;
import org.sablecc.portugol.analysis.*;

@SuppressWarnings("nls")
public final class AAvalieComando extends PComando
{
    private TAvalie _avalie_;
    private TAbreParentese _abreParentese_;
    private PExp _exp_;
    private TFechaParentese _fechaParentese_;
    private final LinkedList<PCasoSeq> _casoSeq_ = new LinkedList<PCasoSeq>();
    private final LinkedList<PCasoSenao> _casoSenao_ = new LinkedList<PCasoSenao>();
    private TFimAvalie _fimAvalie_;
    private TPontoVirgula _pontoVirgula_;

    public AAvalieComando()
    {
        // Constructor
    }

    public AAvalieComando(
        @SuppressWarnings("hiding") TAvalie _avalie_,
        @SuppressWarnings("hiding") TAbreParentese _abreParentese_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TFechaParentese _fechaParentese_,
        @SuppressWarnings("hiding") List<?> _casoSeq_,
        @SuppressWarnings("hiding") List<?> _casoSenao_,
        @SuppressWarnings("hiding") TFimAvalie _fimAvalie_,
        @SuppressWarnings("hiding") TPontoVirgula _pontoVirgula_)
    {
        // Constructor
        setAvalie(_avalie_);

        setAbreParentese(_abreParentese_);

        setExp(_exp_);

        setFechaParentese(_fechaParentese_);

        setCasoSeq(_casoSeq_);

        setCasoSenao(_casoSenao_);

        setFimAvalie(_fimAvalie_);

        setPontoVirgula(_pontoVirgula_);

    }

    @Override
    public Object clone()
    {
        return new AAvalieComando(
            cloneNode(this._avalie_),
            cloneNode(this._abreParentese_),
            cloneNode(this._exp_),
            cloneNode(this._fechaParentese_),
            cloneList(this._casoSeq_),
            cloneList(this._casoSenao_),
            cloneNode(this._fimAvalie_),
            cloneNode(this._pontoVirgula_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAvalieComando(this);
    }

    public TAvalie getAvalie()
    {
        return this._avalie_;
    }

    public void setAvalie(TAvalie node)
    {
        if(this._avalie_ != null)
        {
            this._avalie_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._avalie_ = node;
    }

    public TAbreParentese getAbreParentese()
    {
        return this._abreParentese_;
    }

    public void setAbreParentese(TAbreParentese node)
    {
        if(this._abreParentese_ != null)
        {
            this._abreParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParentese_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TFechaParentese getFechaParentese()
    {
        return this._fechaParentese_;
    }

    public void setFechaParentese(TFechaParentese node)
    {
        if(this._fechaParentese_ != null)
        {
            this._fechaParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentese_ = node;
    }

    public LinkedList<PCasoSeq> getCasoSeq()
    {
        return this._casoSeq_;
    }

    public void setCasoSeq(List<?> list)
    {
        for(PCasoSeq e : this._casoSeq_)
        {
            e.parent(null);
        }
        this._casoSeq_.clear();

        for(Object obj_e : list)
        {
            PCasoSeq e = (PCasoSeq) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._casoSeq_.add(e);
        }
    }

    public LinkedList<PCasoSenao> getCasoSenao()
    {
        return this._casoSenao_;
    }

    public void setCasoSenao(List<?> list)
    {
        for(PCasoSenao e : this._casoSenao_)
        {
            e.parent(null);
        }
        this._casoSenao_.clear();

        for(Object obj_e : list)
        {
            PCasoSenao e = (PCasoSenao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._casoSenao_.add(e);
        }
    }

    public TFimAvalie getFimAvalie()
    {
        return this._fimAvalie_;
    }

    public void setFimAvalie(TFimAvalie node)
    {
        if(this._fimAvalie_ != null)
        {
            this._fimAvalie_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimAvalie_ = node;
    }

    public TPontoVirgula getPontoVirgula()
    {
        return this._pontoVirgula_;
    }

    public void setPontoVirgula(TPontoVirgula node)
    {
        if(this._pontoVirgula_ != null)
        {
            this._pontoVirgula_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pontoVirgula_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._avalie_)
            + toString(this._abreParentese_)
            + toString(this._exp_)
            + toString(this._fechaParentese_)
            + toString(this._casoSeq_)
            + toString(this._casoSenao_)
            + toString(this._fimAvalie_)
            + toString(this._pontoVirgula_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._avalie_ == child)
        {
            this._avalie_ = null;
            return;
        }

        if(this._abreParentese_ == child)
        {
            this._abreParentese_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._fechaParentese_ == child)
        {
            this._fechaParentese_ = null;
            return;
        }

        if(this._casoSeq_.remove(child))
        {
            return;
        }

        if(this._casoSenao_.remove(child))
        {
            return;
        }

        if(this._fimAvalie_ == child)
        {
            this._fimAvalie_ = null;
            return;
        }

        if(this._pontoVirgula_ == child)
        {
            this._pontoVirgula_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._avalie_ == oldChild)
        {
            setAvalie((TAvalie) newChild);
            return;
        }

        if(this._abreParentese_ == oldChild)
        {
            setAbreParentese((TAbreParentese) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._fechaParentese_ == oldChild)
        {
            setFechaParentese((TFechaParentese) newChild);
            return;
        }

        for(ListIterator<PCasoSeq> i = this._casoSeq_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PCasoSeq) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PCasoSenao> i = this._casoSenao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PCasoSenao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimAvalie_ == oldChild)
        {
            setFimAvalie((TFimAvalie) newChild);
            return;
        }

        if(this._pontoVirgula_ == oldChild)
        {
            setPontoVirgula((TPontoVirgula) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
