/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.portugol.node;

import org.sablecc.portugol.analysis.*;

@SuppressWarnings("nls")
public final class AParentadonegadoExpLogica4 extends PExpLogica4
{
    private TNegacao _negacao_;
    private TAbreParentese _abreParentese_;
    private PExpLogica2 _expLogica2_;
    private TFechaParentese _fechaParentese_;

    public AParentadonegadoExpLogica4()
    {
        // Constructor
    }

    public AParentadonegadoExpLogica4(
        @SuppressWarnings("hiding") TNegacao _negacao_,
        @SuppressWarnings("hiding") TAbreParentese _abreParentese_,
        @SuppressWarnings("hiding") PExpLogica2 _expLogica2_,
        @SuppressWarnings("hiding") TFechaParentese _fechaParentese_)
    {
        // Constructor
        setNegacao(_negacao_);

        setAbreParentese(_abreParentese_);

        setExpLogica2(_expLogica2_);

        setFechaParentese(_fechaParentese_);

    }

    @Override
    public Object clone()
    {
        return new AParentadonegadoExpLogica4(
            cloneNode(this._negacao_),
            cloneNode(this._abreParentese_),
            cloneNode(this._expLogica2_),
            cloneNode(this._fechaParentese_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParentadonegadoExpLogica4(this);
    }

    public TNegacao getNegacao()
    {
        return this._negacao_;
    }

    public void setNegacao(TNegacao node)
    {
        if(this._negacao_ != null)
        {
            this._negacao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._negacao_ = node;
    }

    public TAbreParentese getAbreParentese()
    {
        return this._abreParentese_;
    }

    public void setAbreParentese(TAbreParentese node)
    {
        if(this._abreParentese_ != null)
        {
            this._abreParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._abreParentese_ = node;
    }

    public PExpLogica2 getExpLogica2()
    {
        return this._expLogica2_;
    }

    public void setExpLogica2(PExpLogica2 node)
    {
        if(this._expLogica2_ != null)
        {
            this._expLogica2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expLogica2_ = node;
    }

    public TFechaParentese getFechaParentese()
    {
        return this._fechaParentese_;
    }

    public void setFechaParentese(TFechaParentese node)
    {
        if(this._fechaParentese_ != null)
        {
            this._fechaParentese_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fechaParentese_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._negacao_)
            + toString(this._abreParentese_)
            + toString(this._expLogica2_)
            + toString(this._fechaParentese_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._negacao_ == child)
        {
            this._negacao_ = null;
            return;
        }

        if(this._abreParentese_ == child)
        {
            this._abreParentese_ = null;
            return;
        }

        if(this._expLogica2_ == child)
        {
            this._expLogica2_ = null;
            return;
        }

        if(this._fechaParentese_ == child)
        {
            this._fechaParentese_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._negacao_ == oldChild)
        {
            setNegacao((TNegacao) newChild);
            return;
        }

        if(this._abreParentese_ == oldChild)
        {
            setAbreParentese((TAbreParentese) newChild);
            return;
        }

        if(this._expLogica2_ == oldChild)
        {
            setExpLogica2((PExpLogica2) newChild);
            return;
        }

        if(this._fechaParentese_ == oldChild)
        {
            setFechaParentese((TFechaParentese) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
