/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.portugol.node;

import java.util.*;
import org.sablecc.portugol.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private TComecaPrograma _comecaPrograma_;
    private TId _id_;
    private TInicioPrograma _inicioPrograma_;
    private final LinkedList<PDeclaracao> _declaracao_ = new LinkedList<PDeclaracao>();
    private final LinkedList<PComando> _comando_ = new LinkedList<PComando>();
    private TFimPrograma _fimPrograma_;

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") TComecaPrograma _comecaPrograma_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TInicioPrograma _inicioPrograma_,
        @SuppressWarnings("hiding") List<?> _declaracao_,
        @SuppressWarnings("hiding") List<?> _comando_,
        @SuppressWarnings("hiding") TFimPrograma _fimPrograma_)
    {
        // Constructor
        setComecaPrograma(_comecaPrograma_);

        setId(_id_);

        setInicioPrograma(_inicioPrograma_);

        setDeclaracao(_declaracao_);

        setComando(_comando_);

        setFimPrograma(_fimPrograma_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneNode(this._comecaPrograma_),
            cloneNode(this._id_),
            cloneNode(this._inicioPrograma_),
            cloneList(this._declaracao_),
            cloneList(this._comando_),
            cloneNode(this._fimPrograma_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public TComecaPrograma getComecaPrograma()
    {
        return this._comecaPrograma_;
    }

    public void setComecaPrograma(TComecaPrograma node)
    {
        if(this._comecaPrograma_ != null)
        {
            this._comecaPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comecaPrograma_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TInicioPrograma getInicioPrograma()
    {
        return this._inicioPrograma_;
    }

    public void setInicioPrograma(TInicioPrograma node)
    {
        if(this._inicioPrograma_ != null)
        {
            this._inicioPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicioPrograma_ = node;
    }

    public LinkedList<PDeclaracao> getDeclaracao()
    {
        return this._declaracao_;
    }

    public void setDeclaracao(List<?> list)
    {
        for(PDeclaracao e : this._declaracao_)
        {
            e.parent(null);
        }
        this._declaracao_.clear();

        for(Object obj_e : list)
        {
            PDeclaracao e = (PDeclaracao) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._declaracao_.add(e);
        }
    }

    public LinkedList<PComando> getComando()
    {
        return this._comando_;
    }

    public void setComando(List<?> list)
    {
        for(PComando e : this._comando_)
        {
            e.parent(null);
        }
        this._comando_.clear();

        for(Object obj_e : list)
        {
            PComando e = (PComando) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._comando_.add(e);
        }
    }

    public TFimPrograma getFimPrograma()
    {
        return this._fimPrograma_;
    }

    public void setFimPrograma(TFimPrograma node)
    {
        if(this._fimPrograma_ != null)
        {
            this._fimPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fimPrograma_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comecaPrograma_)
            + toString(this._id_)
            + toString(this._inicioPrograma_)
            + toString(this._declaracao_)
            + toString(this._comando_)
            + toString(this._fimPrograma_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comecaPrograma_ == child)
        {
            this._comecaPrograma_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._inicioPrograma_ == child)
        {
            this._inicioPrograma_ = null;
            return;
        }

        if(this._declaracao_.remove(child))
        {
            return;
        }

        if(this._comando_.remove(child))
        {
            return;
        }

        if(this._fimPrograma_ == child)
        {
            this._fimPrograma_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comecaPrograma_ == oldChild)
        {
            setComecaPrograma((TComecaPrograma) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._inicioPrograma_ == oldChild)
        {
            setInicioPrograma((TInicioPrograma) newChild);
            return;
        }

        for(ListIterator<PDeclaracao> i = this._declaracao_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDeclaracao) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PComando> i = this._comando_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PComando) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._fimPrograma_ == oldChild)
        {
            setFimPrograma((TFimPrograma) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
